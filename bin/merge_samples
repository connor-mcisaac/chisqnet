#! /usr/bin/env python

import argparse
import logging
import h5py
import numpy as np
from chisqnet.preprocessing import DataCollector, AttributeCollector


parser = argparse.ArgumentParser()

# Gather inputs from preprocessing step
parser.add_argument("--sample-files", nargs='+', required=True,
                    help="List of sample files")

# Gather output options
parser.add_argument("--output-file", required=True,
                    help="Output location")

# Gather additional options
parser.add_argument("--remove-injection-params", action='store_true')
parser.add_argument("--verbose", action='store_true')

args = parser.parse_args()

if args.verbose:
    log_level = logging.DEBUG
else:
    log_level = logging.WARNING
logging.basicConfig(format='%(asctime)s : %(message)s', level=log_level)

logging.info("Reading and combining sample files")

file_attrs = AttributeCollector()
file_data = DataCollector()
for fp in args.sample_files:
    with h5py.File(fp, 'r') as f:
        file_attrs(f)
        f.visititems(file_data)

if args.remove_injection_params:
    injection_keys = []
    for k in file_data.datasets.keys():
        if k.startswith("inj:") or k == "injection_index":
            injection_keys.append(k)
    for k in injection_keys:
        _ = file_data.datasets.pop(k)

file_data.concatenate_datasets()
file_data.check_lengths()

logging.info("Saving combined sample file")

with h5py.File(args.output_file, 'w') as f:
    
    for k, v in file_attrs.attrs.items():
        f.attrs[k] = v

    for k, v in file_data.datasets.items():
        _ = f.create_dataset(k, data=v)

logging.info("Done!")
