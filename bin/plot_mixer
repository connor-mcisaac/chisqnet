#! /usr/bin/env python

import sys
import argparse
import h5py
import numpy as np
from chisqnet.filtering import ChisqFilter
from pycbc import waveform
import tensorflow as tf
import pycbc.results
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt


parser = argparse.ArgumentParser()

parser = argparse.ArgumentParser()
parser.add_argument("--model-file", required=True,
                    help="File containing model to be plotted")
parser.add_argument("--bank-file", required=True,
                    help="File containing bank to be plotted")

parser.add_argument("--output-file", required=True,
                    help="Location of the output file")

args = parser.parse_args()

with h5py.File(args.model_file, 'r') as f:
     epoch = f.attrs['epoch']

chisq_transform = ChisqFilter.from_file(
     args.model_file,
     np.arange(10), 1., 10.,
     group="model_epoch_{0}".format(epoch)
)

bank = waveform.TemplateBank(args.bank_file)

if chisq_transform.mixer is not None:
     fig, ax = chisq_transform.mixer.plot_model(bank)
else:
     fig, ax = plt.subplots(figsize=(8, 6))

     ax.set_xlim(0, 1)
     ax.set_ylim(0, 1)

     output_message = "No template mixer used in this run."
     ax.text(0.5, 0.5, output_message, horizontalalignment='center',
             verticalalignment='center')

caption = "This is a plot of the trained mixer after all training is complete."

pycbc.results.save_fig_with_metadata(fig, args.output_file,
     title='Mixer',
     caption=caption,
     cmd=' '.join(sys.argv))
